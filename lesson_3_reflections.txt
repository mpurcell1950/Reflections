Q: When would you want to use a remote repository rather than keeping all your work local?
A: First, a remote repository is a great backup of your project to the cloud. So even if you are the only one working on the project, it's a great idea to have a remote copy of it. Additionally, when a project needs to be worked on by more than one person, the remote repository makes it possible for people at various locations to have access to the project files.

Q: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
A: If others are working on the project, there may be some contributions that you do not want to include in your own copy.

Q: Describe the differences between forks, clones, and branches. When would you use one instead of another?
A: A branch is section of separate code within a repository connected to the code of another branch in the repository. A clone is an exact copy of a repository, either from a service such as GitHub to the local computer, or from computer to computer, or even on the same computer. A fork is an exact copy of a repository (like a clone) when both repositories are on GitHub.

Q: What is the benefit of having a copy of the last known state of the remote stored locally?
A: Makes it more likely that the local and remote repositories will not get out of sync.

Q: How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
A: I can't imagine collaborating without git or github. Maybe give someone a copy of the files, then get together and discuss what changes each has made. Sounds silly. I can't think of anything off hand that would be easier without git and github.

Q: When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
A: In this case, it worked best to make another collaborator's and your own changes in a separate branch so that the other collaborator can approve the change before it is merged into the master branch.