Q: What happens when you initialize a repository? Why do you need to do it?
A: The hidden .git directory is created with the framework for tracking information to be added later. This is the first step in making the directory a git repository.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?
A: The staging area contains references to the files that should be commited. The working directory contains the current state of the files that can be modified. The repository contains all files and all changes that have been commited for the life of the project.

Q: How can you use the staging area to make sure you have one commit per logical change?
A: By using the git diff and git diff --staged commands to examine the contents

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A: When making experimental changes. When making two different versions of a program, such as free and Pro(paid). With branches, you can have different versions of the program concurrently, and work on each separately.

Q: How do the diagrams help you visualize the branch structure?
A: It's easier to grasp the concept of branches with a visual representation. Depending on how the mind works, one usually makes a diagram mentally for such concepts anyway.

Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A: Merging two branches combines the changes made in each branch into one branch. The visual representation makes it easier to understand how the parts fit together.

Q: 